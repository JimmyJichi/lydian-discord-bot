--- # Copy this to "config.yml" before modifying!
#####

# Please keep this file so that you can refer back to its comments
# Comments will be lost if config.yml updates automatically

# Booleans may be yes/no, on/off, or true/false

# Config is loaded once when `bot.py` is run, so changes made here won't go into
# effect until after it is restarted

#####

# The color to use on the side of bot messages
embed-color: "ff00ff"

# Should be yes/on/true almost always
# Currently only decides which prefix to use (true = public, false = developer) 
public: yes

# Path to the text file containing the bot's token
token-file: "token.txt"

# Set your command prefix here
prefixes:
    public: "-"
    developer: "$"

# Toggles voting to skip; if this is disabled, -skip will skip the currently playing track instantly
# If enabled, you will enough users to use -skip on the same song before it will actually skip it
vote-to-skip:
    enabled: yes
    # A percentage of users connected to voice required to skip a song; does nothing if vote-to-skip is disabled
    threshold-type: "percentage" # Can be "percentage" or "exact"
    threshold-percentage: 50
    threshold-exact: 3

# Toggles whether -nowplaying and -queue will show names of who queued what
show-users-in-queue: yes

# Toggles the usage of the URL cache, which is intended to slightly speed up queuing times
# You may disable this if it is causing problems for you (if it is, please submit an issue reporting the bug)
use-url-cache: yes

# List of file extensions the bot will detect and delete on startup; must start with a "."
auto-remove:
    - ".part"
    - ".mp3"
    - ".wav"
    - ".ogg"
    - ".m4a"
    - ".mp4"
    - ".webm"
    - ".opus"

# Allows queueing entire Spotify playlists
allow-spotify-playlists: yes

# Limit the amount of tracks playlists can have before queueing
playlist-track-limit: 50

# Limit the amount of tracks albums can have before queueing
album-track-limit: 50

# Automatically queues the top result of a Spotify-YouTube match,
# regardless of how close the match is
use-top-match: no

# Forces Spotify links to not find an automatic YouTube match,
# and will always trigger the choice menu
force-match-prompt: no

# Prevent videos over this limit (in hours) from being queued
duration-limit: 5

# Maximum number of URLs that can be queued at once with -play
# High limits may cause significant issues with queueing if the items take too long
maximum-urls: 5

# Maximum number of tracks to save and show with the bot's "-history" command
# Setting to 0 will disable it entirely
play-history-max: 5

# Leave the voice channel if nothing has been playing for this many minutes
# Setting this to 0 will disable it entirely and never automatically leave
inactivity-timeout: 10

# Customizable command aliases
# Any commands not listed will only work with their default name
aliases:
    analyze:
        - "analyse"
    join:
        - "j"
    loop:
        - "l"
    move:
        - "m"
    nowplaying:
        - "np"
    play:
        - "p"
    queue:
        - "q"
    repository:
        - "repo"
        - "github"
        - "gh"
    skip:
        - "s"
    clearcache:
        - "emptycache"
        - "flushcache"

# Any commands listed here will be disabled from use
command-blacklist:
    -

# Set various options for output logs
logging-options:
    # What level of logs to output to the console; valid options are "DEBUG" (lowest), "INFO", "WARNING", "ERROR", and "CRITICAL" (highest)
    # Only logs greater than or equal to this level will be displayed,
    # others will not show up in the console but are still logged to vimusbot.log 
    # For more about this and what each level represents, see: https://github.com/svioletg/viMusBot/blob/dev/README.md#reading-logs
    console-log-level: "INFO"
    # Whether to print out full error tracebacks to the console
    # Tracebacks are always saved to the log file for debugging usage,
    # but they can take up lots of space in the console, so you can hide them if you wish.
    log-full-tracebacks: no
    # Choose your preferred log colors (these are only used in console output, log files will have no color codes)
    colors:
        # Run "palette.py" to see a list of choices
        no-color: no # Disables all message coloring
        info: "white"
        warn: "gold"
        error: "red"
        critical: "red"
        timer: "darkmagenta" # The time between logs at the end of each message
        module: "yellow" # For module names (bot.py, media.py, etc.)
        function: "blue" # For function names
